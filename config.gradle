// gradle 统一配置
ext.deps = [:]

// build 相关配置
def build_versions = [:]
build_versions.android_build_gradle = "4.0.2"
build_versions.compileSdkVersion = 29
build_versions.buildToolsVersion = "29.0.3"
build_versions.minSdkVersion = 19
build_versions.targetSdkVersion = 29
build_versions.versionCode = 1
build_versions.versionName = "1.0.0"
ext.build_versions = build_versions

def versions = [:]
versions.and_res_guard = "1.2.18"
versions.constraintlayout = "1.1.3"
versions.appcompat = "1.2.0"
versions.material = "1.3.0"
versions.multidex = "2.0.1"
versions.lifecycle_extensions = "2.2.0"

versions.origin = "1.0.11"
versions.core = "1.0.5"
versions.common = "1.0.0"
versions.service = "1.0.0"
versions.widget = "1.0.0"
versions.user = "1.0.0"

versions.swipebacklayout = "1.1.0"

versions.okhttp = "4.9.1"
versions.retrofit = "2.9.0"

versions.rxjava = "3.0.13"
versions.rxandroid = "3.0.0"
versions.rxpermission = "0.12"

versions.lombok = "1.18.20"
versions.mmkv = "1.2.10"
versions.eventbus = "3.2.0"
versions.logger = "2.2.0"
versions.arouter = "1.5.2"

versions.objectbox = "3.0.1"

versions.aspectjx_plugin = "2.0.10"
versions.aspectjrt = "1.9.6"

versions.luban = "1.1.8"
versions.video_processor = "2.4.2"
versions.glide = "4.12.0"
versions.picture_selector = "v2.6.1"

versions.kprogresshud = "1.2.0"

versions.mobile_ffmpeg = "4.4"

versions.adapter_helper = "3.0.4"
versions.base_popup = "3.2.0"

versions.jsbridge = "1.0.4"
versions.agentweb = "v4.1.9-androidx"

ext.versions = versions

deps.android_build_gradle = "com.android.tools.build:gradle:$build_versions.android_build_gradle"
deps.and_res_guard_gradle_plugin = "com.tencent.mm:AndResGuard-gradle-plugin:$versions.and_res_guard"

def androidx = [:]
androidx.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
androidx.appcompat = "androidx.appcompat:appcompat:$versions.appcompat"
androidx.material = "com.google.android.material:material:$versions.material"
androidx.multidex = "androidx.multidex:multidex:$versions.multidex"
androidx.lifecycle_extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle_extensions"
deps.androidx = androidx

//swipebacklayout [https://github.com/ikew0ng/SwipeBackLayout]
deps.swipebacklayout = "me.imid.swipebacklayout.lib:library:$versions.swipebacklayout"

def dagger = [:]
dagger.dagger = "com.google.dagger:dagger:2.28.1"
dagger.processor = "com.google.dagger:dagger-compiler:2.28.1"
dagger.android = "com.google.dagger:dagger-android:2.28.1"
dagger.android_processor = "com.google.dagger:dagger-android-processor:2.28.1"
deps.dagger = dagger

// okhttp [https://github.com/square/okhttp]
def okhttp = [:]
okhttp.okhttp = "com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.logging = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
deps.okhttp = okhttp

//retrofit [https://github.com/square/retrofit]
def retrofit = [:]
retrofit.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.adapter = "com.squareup.retrofit2:adapter-rxjava3:$versions.retrofit"
retrofit.converter = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
deps.retrofit = retrofit

// objectbox [https://github.com/objectbox/objectbox-java]
deps.objectboct_plugin = "io.objectbox:objectbox-gradle-plugin:$versions.objectbox"

// aspectjx aop [https://github.com/HujiangTechnology/gradle_plugin_android_aspectjx]
deps.aspectjx_plugin = "com.hujiang.aspectjx:gradle-android-plugin-aspectjx:$versions.aspectjx_plugin"
deps.aspectjrt = "org.aspectj:aspectjrt:$versions.aspectjrt"

//luban 图片压缩 [https://github.com/Curzibn/Luban]
deps.luban = "top.zibin:Luban:$versions.luban"

// videoProcessor 视频压缩 [https://github.com/yellowcath/VideoProcessor]
deps.video_processor = "com.github.yellowcath:VideoProcessor:$versions.video_processor"

//glide 图片加载 [https://github.com/bumptech/glide]
def glide = [:]
glide.glide = "com.github.bumptech.glide:glide:$versions.glide"
glide.glide_processor = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

//pictureselector 图片选择 [https://github.com/LuckSiege/PictureSelector]
deps.picture_selector = "io.github.lucksiege:pictureselector:$versions.picture_selector"

//rxjava [https://github.com/ReactiveX/RxJava]
deps.rxjava = "io.reactivex.rxjava3:rxjava:$versions.rxjava"

//rxandroid [https://github.com/ReactiveX/RxAndroid]
deps.rxandroid = "io.reactivex.rxjava3:rxandroid:$versions.rxandroid"

//rxpermission [https://github.com/tbruyelle/RxPermissions]
deps.rxpermission = "com.github.tbruyelle:rxpermissions:$versions.rxpermission"

//kprogresshud 进度条 [https://github.com/Kaopiz/KProgressHUD]
deps.kprogresshud = "com.kaopiz:kprogresshud:$versions.kprogresshud"

//logger [https://github.com/orhanobut/logger]
deps.logger = "com.orhanobut:logger:$versions.logger"

//lombok getter setter [https://github.com/projectlombok/lombok]
//配合 android Studio  lombok 插件使用 只需要添加注解即可，不需要手动写get set 代码
def lombok = [:]
lombok.lombok = "org.projectlombok:lombok:$versions.lombok"
lombok.lombok_processor = "org.projectlombok:lombok:$versions.lombok"
deps.lombok = lombok

// mmkv 数据存储 代替sp [https://github.com/Tencent/MMKV]
deps.mmkv = "com.tencent:mmkv-static:$versions.mmkv"

// EventBus 事件通知[https://github.com/greenrobot/EventBus]
deps.evetbus = "org.greenrobot:eventbus:$versions.eventbus"

// Arouter 路由通信 [https://github.com/alibaba/ARouter]
def arouter = [:]
arouter.arouter = "com.alibaba:arouter-api:$versions.arouter"
arouter.arouter_processor = "com.alibaba:arouter-compiler:$versions.arouter"
deps.arouter = arouter

// mobile_ffmpeg [https://github.com/tanersener/mobile-ffmpeg]
versions.mobile_ffmpeg_remote = false

if (versions.mobile_ffmpeg_remote) {
    deps.mobile_ffmpeg = "com.arthenica:mobile-ffmpeg-full:$versions.mobile_ffmpeg"
}else {
    deps.mobile_ffmpeg = project(':module_libs')
}

// BaseRecyclerViewAdapterHelper [https://github.com/CymChad/BaseRecyclerViewAdapterHelper]
deps.adapter_helper = "com.github.CymChad:BaseRecyclerViewAdapterHelper:$versions.adapter_helper"

// BasePopup [https://github.com/razerdp/BasePopup]
deps.base_popup = "io.github.razerdp:BasePopup:$versions.base_popup"

//jsbridge [https://github.com/lzyzsd/JsBridge]
deps.jsbridge = "com.github.lzyzsd:jsbridge:$versions.jsbridge"

//agentweb [https://github.com/Justson/AgentWeb]
deps.agentweb = "com.github.Justson.AgentWeb:agentweb-core:$versions.agentweb"

def origin = [:]
// 是否使用远程依赖 true使用远程依赖（远程私服存储的aar依赖）
// false则为本地仓库存储的代码

// 多个模块 每次开发完成之后，升级一下私服的版本号，然后发布到私有服务上面
// 不需要改动代码时，拉取下来的就是aar包，需要改动或者查看本地代码时，改为false用本地的library包
// 可以改动这里的代码来查看本地的代码是引用到私有仓库还是本地
versions.module_common_remote = false
deps.origin = origin

versions.module_service_remote = false
versions.module_widget_remote = false

if (versions.module_common_remote) {
    origin.common = "com.xxl.common:hello_nexus:$versions.common"
} else {
    origin.common = project(':framework:module_common')
}

versions.module_core_remote = true
if (versions.module_core_remote) {
    origin.core = "com.xxl.core:core:$versions.core"
} else {
    origin.core = project(':framework:module_core')
}

origin.service = project(':framework:module_service')
origin.resources = project(':framework:module_resources')
origin.widget = project(':framework:module_widget')
origin.router = project(':framework:module_router')

origin.main = project(':modules:module_main')
origin.user = project(':modules:module_user')
//origin.s = project.getRootDir().getAbsolutePath();

// 核心模块私服
def origin_maven_config = [:]
origin_maven_config.userName = "admin"
origin_maven_config.password = "admin123"
origin_maven_config.url = "http://127.0.0.1:8081/repository/origin"
ext.origin_maven_config = origin_maven_config

// 项目模块私服
def hello_maven_config = [:]
hello_maven_config.userName = "admin"
hello_maven_config.password = "admin123"
hello_maven_config.url = "http://127.0.0.1:8081/repository/hello"
ext.hello_maven_config = hello_maven_config

 def addRepos(RepositoryHandler handler) {
    handler.maven { url 'https://maven.aliyun.com/repository/google' }
    handler.maven { url 'https://maven.aliyun.com/repository/jcenter' }
    handler.maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
    handler.maven { url 'https://jitpack.io' }
    handler.mavenCentral()
    handler.google()
    handler.flatDir { dirs project.getRootDir().getAbsolutePath() + "/module_libs" }

     //使用的时候添加仓库 私服仓库地址，连接不上打包会报错，暂时注释掉
    handler.maven { url "http://127.0.0.1:8081/repository/origin/" }
}

ext.addRepos = this.&addRepos