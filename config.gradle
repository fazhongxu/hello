// gradle 统一配置
ext.deps = [:]

def versions = [:]
versions.constraintlayout = "1.1.3"
versions.origin = "1.0.10"
versions.okhttp = "4.9.1"
versions.retrofit = "2.9.0"
ext.versions = versions

// build 相关配置
def build_versions = [:]
build_versions.compileSdkVersion = 30
build_versions.buildToolsVersion = "30.0.1"
build_versions.minSdkVersion = 16
build_versions.targetSdkVersion = 30
build_versions.versionCode = 1
build_versions.versionName = "1.0.0"
ext.build_versions = build_versions

def androidx = [:]
androidx.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
deps.androidx = androidx

def dagger = [:]
dagger.dagger = "com.google.dagger:dagger:2.28.1"
dagger.processor = "com.google.dagger:dagger-compiler:2.28.1"
dagger.android = "com.google.dagger:dagger-android:2.28.1"
dagger.android_processor = "com.google.dagger:dagger-android-processor:2.28.1"
deps.dagger = dagger

// okhttp [https://github.com/square/okhttp]
def okhttp = [:]
okhttp.okhttp = "com.squareup.okhttp3:okhttp:$versions.okhttp"
deps.okhttp = okhttp

//retrofit [https://github.com/square/retrofit]
def retrofit = [:]
retrofit.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofit"
deps.retrofit = retrofit

def origin = [:]
// 是否使用远程依赖 true使用远程依赖（远程私服存储的aar依赖）
// false则为本地仓库存储的代码

// 多个模块 每次开发完成之后，升级一下私服的版本号，然后发布到私有服务上面
// 不需要改动代码时，拉取下来的就是aar包，需要改动或者查看本地代码时，改为false用本地的library包
// 可以改动这里的代码来查看本地的代码是引用到私有仓库还是本地
versions.module_common_remote = false
deps.origin = origin

versions.module_service_remote = false;

if (versions.module_common_remote) {
    origin.common = "com.xxl.common:hello_nexus:$versions.origin"
} else {
    origin.common = project(':base:module_common')
}

origin.service = project(':base:module_service')

def hello_nexus_maven_config = [:]
hello_nexus_maven_config.userName = "admin"
hello_nexus_maven_config.password = "admin123"
hello_nexus_maven_config.url = "http://127.0.0.1:8081/repository/hello_nexus/"
ext.hello_nexus_maven_config = hello_nexus_maven_config

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    handler.maven {
        url 'http://maven.aliyun.com/nexus/content/repositories/jcenter/'
    }
    handler.mavenCentral()
    handler.maven { url 'https://jitpack.io' }
    //使用的时候添加仓库
    handler.maven { url "http://127.0.0.1:8081/repository/hello_nexus/" }
}

ext.addRepos = this.&addRepos