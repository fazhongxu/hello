//apply plugin: 'com.android.library'
//apply plugin: 'maven'
//apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-kapt'

plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion build_versions.compileSdkVersion
    buildToolsVersion build_versions.buildToolsVersion

    defaultConfig {
        minSdkVersion build_versions.minSdkVersion
        targetSdkVersion build_versions.targetSdkVersion
        versionCode build_versions.versionCode
        versionName build_versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility build_versions.sourceCompatibility
        targetCompatibility build_versions.targetCompatibility
    }
}

publishing {
    publications {
        publish2Local(MavenPublication) {
            groupId = 'com.xxl.hello.common'
            artifactId = 'common'
            version = versions.common
        }
    }

    repositories {
        maven {
            allowInsecureProtocol true
            url = hello_maven_config.url
            credentials {
                username = hello_maven_config.userName
                password =hello_maven_config.password
            }
        }
    }
}

//uploadArchives {
//    repositories.mavenDeployer {
//        repository(url: hello_maven_config.url) {
//            authentication(userName: hello_maven_config.userName, password: hello_maven_config.password)
//        }
//        pom.version = versions.common
//        pom.artifactId = "common"
//        pom.groupId = "com.xxl.hello.common"
//    }
//}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation deps.origin.core
    implementation deps.origin.kit
    implementation deps.androidx.appcompat

    implementation deps.dagger.dagger
    kapt deps.dagger.processor
    implementation deps.dagger.android
    kapt deps.dagger.android_processor

    implementation deps.okhttp.okhttp
    implementation deps.okhttp.logging
    implementation deps.retrofit.retrofit
    implementation deps.retrofit.adapter
    implementation deps.retrofit.converter

    implementation deps.rxjava
    implementation deps.rxandroid

    implementation deps.mmkv

    implementation deps.evetbus

    implementation deps.logger

    implementation deps.arouter.arouter
    kapt deps.arouter.arouter_processor

    compileOnly deps.tbs

    implementation deps.hello.resources

}

// module gradle-> other->makejar  即可在module build->libs看到生成的文件
task makeJar(type: Copy) {
    //删除存在的
    delete 'build/libs/myjar.jar'
    //设置拷贝的文件
    from('build/intermediates/aar_main_jar/release/')
    //打进jar包后的文件目录
    into('build/libs/')
    //将classes.jar放入build/libs/目录下
    //include ,exclude参数来设置过滤
    //（我们只关心classes.jar这个文件）
    include('classes.jar')
    //重命名
    rename('classes.jar', 'myjar.jar')
}

makeJar.dependsOn(build)

//region: 生成带注释的 aar 的必须配置项

// 可以生成带注释的jar包
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

//生成文档注释
task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}
//将文档打包成jar
task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

//包含文档和源码的aar
artifacts {
    archives sourcesJar
    archives androidJavadocsJar
}

//endregion